name: Integration tests

on: [push, pull_request]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'deploy/go.mod'

      - name: Set up Docker registry
        run: |
          docker network create kind || true
          docker run -d --network kind --name registry -p 5000:5000 registry:2

      - name: Write config file
        run: |
          cat <<EOF > kind-config.yaml
          apiVersion: kind.x-k8s.io/v1alpha4
          kind: Cluster
          containerdConfigPatches:
          - |
            [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5000"]
              endpoint = ["http://registry:5000"]
          
          kubeadmConfigPatches:
          - |
            kind: ClusterConfiguration
            apiServer:
              extraArgs:
                "service-node-port-range": "30000-30005"

          nodes:
          - role: control-plane
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
            - containerPort: 30000
              hostPort: 30000
            - containerPort: 30001
              hostPort: 30001
            - containerPort: 30002
              hostPort: 30002
            - containerPort: 30003
              hostPort: 30003
            - containerPort: 30004
              hostPort: 30004
            - containerPort: 30005
              hostPort: 30005
          networking:
            disableDefaultCNI: true
          EOF

      - name: Set up Kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # 1.12.0
        with:
          version: v0.20.0
          config: kind-config.yaml
          cluster_name: kind
        env:
          KIND_EXPERIMENTAL_DOCKER_NETWORK: kind

      - name: Setup Cilium as Kind CNI
        run: |
          # See https://docs.cilium.io/en/stable/installation/kind/#install-cilium
          helm repo add cilium https://helm.cilium.io/

          docker pull quay.io/cilium/cilium:v1.17.4
          kind load docker-image quay.io/cilium/cilium:v1.17.4

          helm install cilium cilium/cilium --version 1.17.4 \
            --namespace kube-system \
            --set image.pullPolicy=IfNotPresent \
            --set ipam.mode=kubernetes

      - name: Export server URL
        id: server
        run: |
          echo "server=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kind-control-plane)" >> "$GITHUB_OUTPUT"

      - name: Build and push CM
        run: |
          docker build \
              -t localhost:5000/ctferio/chall-manager:${{ github.sha }} \
              -f Dockerfile.chall-manager \
              .
          docker push localhost:5000/ctferio/chall-manager:${{ github.sha }}

      - name: Build and push CMJ
        run: |
          docker build \
              -t localhost:5000/ctferio/chall-manager-janitor:${{ github.sha }} \
              -f Dockerfile.chall-manager-janitor \
              .
          docker push localhost:5000/ctferio/chall-manager-janitor:${{ github.sha }}

      - name: Install Pulumi
        uses: pulumi/actions@df5a93ad715135263c732ba288301bd044c383c0 # v6.3.0
      - name: Prepare environment
        run: |
          pulumi login --local
          kubectl create ns cm-in-ci

      # The following steps cleans up the GHA ubuntu environment.
      # It is required due to Pulumi consuming large space when starting a prod-like
      # environment for Integration Tests purposes.
      # It removes around 25 Gib of disk space.
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          docker-images: false # keep everything around here to avoid shoothing kind and local registry

      - name: Run Integration Tests
        run: |
          go test -v ./deploy/integration/ -run=^Test_I_ -coverprofile=cov.out -timeout=30m
        env:
          REGISTRY: localhost:5000
          TAG: ${{ github.sha }}
          ROMEO_CLAIM_NAME: ${{ steps.env.outputs.claim-name }}
          SERVER: ${{ steps.server.outputs.server }}

      - name: Upload coverage to Coveralls
        uses: shogo82148/actions-goveralls@e6875f831db61e6abffbd8df91a2eb6cd24b46c9 # v1.9.1
        with:
          path-to-profile: 'cov.out'
